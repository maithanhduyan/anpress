import{_ as i,c as o,d as p,a,b as n,e as t,f as l,r,o as u}from"./app-B4330F5T.js";const c="/images/hero.png",d={},m={class:"hint-container tip"},k={class:"hint-container tip"};function g(v,s){const e=r("RouteLink");return u(),o("div",null,[s[32]||(s[32]=p(`<h1 id="assets" tabindex="-1"><a class="header-anchor" href="#assets"><span>Assets</span></a></h1><h2 id="relative-urls" tabindex="-1"><a class="header-anchor" href="#relative-urls"><span>Relative URLs</span></a></h2><p>You can reference any assets using relative URLs in your Markdown content:</p><div class="language-markdown line-numbers-mode" data-highlighter="prismjs" data-ext="md" data-title="md"><pre><code><span class="line"><span class="token url"><span class="token operator">!</span>[<span class="token content">An image</span>](<span class="token url">./image.png</span>)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>or</p><div class="language-markdown line-numbers-mode" data-highlighter="prismjs" data-ext="md" data-title="md"><pre><code><span class="line"><span class="token url"><span class="token operator">!</span>[<span class="token content">An image</span>](<span class="token url">image.png</span>)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>This is generally the suggested way to import images, as users usually place images near the Markdown file that references them.</p><h2 id="public-files" tabindex="-1"><a class="header-anchor" href="#public-files"><span>Public Files</span></a></h2><p>You can put some static assets inside public directory, and they will be copied to the root of the generated directory.</p>`,9)),a("p",null,[s[1]||(s[1]=n("The default public directory is ")),s[2]||(s[2]=a("code",null,".vuepress/public",-1)),s[3]||(s[3]=n(", which can be changed by ")),t(e,{to:"/reference/config.html#public"},{default:l(()=>s[0]||(s[0]=[n("public")])),_:1}),s[4]||(s[4]=n(" option."))]),s[33]||(s[33]=p(`<p>It would be useful in some cases:</p><ul><li>You may need to provide static assets that are not directly referenced in any of your Markdown files, for example, favicon and PWA icons.</li><li>You may need to serve some shared static assets, which may even be referenced outside your site, for example, logo images.</li><li>You may want to reference images using absolute URLs in your Markdown content.</li></ul><p>Take our documentation source files as an example, we are putting the logo of VuePress inside the public directory:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">└─ docs</span>
<span class="line">   ├─ .vuepress</span>
<span class="line">   <span class="token operator">|</span>  └─ public</span>
<span class="line">   <span class="token operator">|</span>     └─ images</span>
<span class="line">   <span class="token operator">|</span>        └─ hero.png  <span class="token comment"># &lt;- Logo file</span></span>
<span class="line">   └─ guide</span>
<span class="line">      └─ assets.md       <span class="token comment"># &lt;- Here we are</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>We can reference our logo in current page like this:</p><p><strong>Input</strong></p><div class="language-markdown line-numbers-mode" data-highlighter="prismjs" data-ext="md" data-title="md"><pre><code><span class="line"><span class="token url"><span class="token operator">!</span>[<span class="token content">VuePress Logo</span>](<span class="token url">/images/hero.png</span>)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>Output</strong></p><p><img src="`+c+'" alt="VuePress Logo"></p><h3 id="base-helper" tabindex="-1"><a class="header-anchor" href="#base-helper"><span>Base Helper</span></a></h3>',10)),a("p",null,[s[6]||(s[6]=n("If your site is deployed to a non-root URL, for example, ")),s[7]||(s[7]=a("code",null,"https://foo.github.io/bar/",-1)),s[8]||(s[8]=n(", then the ")),t(e,{to:"/reference/config.html#base"},{default:l(()=>s[5]||(s[5]=[n("base")])),_:1}),s[9]||(s[9]=n(" should be set to ")),s[10]||(s[10]=a("code",null,"'/bar/'",-1)),s[11]||(s[11]=n(". Obviously, your public files would be served like ")),s[12]||(s[12]=a("code",null,"https://foo.github.io/bar/images/hero.png",-1)),s[13]||(s[13]=n(" after deployment."))]),s[34]||(s[34]=p('<p>In most cases, you don&#39;t need to worry about the reference path of those public files, as VuePress will automatically handle <code>base</code> for you:</p><div class="language-markdown line-numbers-mode" data-highlighter="prismjs" data-ext="md" data-title="md"><pre><code><span class="line"><span class="token comment">&lt;!-- you don&#39;t need to prepend `/bar/` to `/images/hero.png` manually --&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token url"><span class="token operator">!</span>[<span class="token content">VuePress Logo</span>](<span class="token url">/images/hero.png</span>)</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',2)),a("div",m,[s[21]||(s[21]=a("p",{class:"hint-container-title"},"Tips",-1)),a("p",null,[s[16]||(s[16]=n("When using ")),t(e,{to:"/reference/bundler/webpack.html"},{default:l(()=>s[14]||(s[14]=[n("webpack bundler")])),_:1}),s[17]||(s[17]=n(", you need to set ")),t(e,{to:"/reference/config.html#markdown-assets"},{default:l(()=>s[15]||(s[15]=[n("markdown.assets.absolutePathPrependBase")])),_:1}),s[18]||(s[18]=n(" to ")),s[19]||(s[19]=a("code",null,"true",-1)),s[20]||(s[20]=n(" to automatically prepend base to markdown images."))])]),a("p",null,[s[23]||(s[23]=n("However, sometimes you may have some dynamical links referencing public files, especially when you are authoring a custom theme. In such case, the ")),s[24]||(s[24]=a("code",null,"base",-1)),s[25]||(s[25]=n(" could not be handled automatically. To help with that, VuePress provides a ")),t(e,{to:"/reference/client-api.html#withbase"},{default:l(()=>s[22]||(s[22]=[n("withBase")])),_:1}),s[26]||(s[26]=n(" helper to prepend ")),s[27]||(s[27]=a("code",null,"base",-1)),s[28]||(s[28]=n(" for you:"))]),s[35]||(s[35]=p(`<div class="language-vue line-numbers-mode" data-highlighter="prismjs" data-ext="vue" data-title="vue"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> withBase <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress/client&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> logoPath <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;/images/hero.png&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>withBase(logoPath)<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can also access the helper by <code>$withBase</code> directly:</p><div class="language-markdown line-numbers-mode" data-highlighter="prismjs" data-ext="md" data-title="md"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>$withBase(&#39;/images/hero.png&#39;)<span class="token punctuation">&quot;</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>VuePress Logo<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="packages-and-path-aliases" tabindex="-1"><a class="header-anchor" href="#packages-and-path-aliases"><span>Packages and Path Aliases</span></a></h2><p>Although it is not a common usage, you can reference images from dependent packages:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-D</span> package-name</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Since markdown image syntax regards image links as relative paths by default, you need to use <code>&lt;img&gt;</code> tag:</p><div class="language-markdown line-numbers-mode" data-highlighter="prismjs" data-ext="md" data-title="md"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>package-name/image.png<span class="token punctuation">&quot;</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Image from dependency<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>The path aliases that set in config file are also supported:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> getDirname<span class="token punctuation">,</span> path <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress/utils&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> __dirname <span class="token operator">=</span> <span class="token function">getDirname</span><span class="token punctuation">(</span><span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>url<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span></span>
<span class="line">  alias<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token string-property property">&#39;@alias&#39;</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;./path/to/some/dir&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-markdown line-numbers-mode" data-highlighter="prismjs" data-ext="md" data-title="md"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@alias/image.png<span class="token punctuation">&quot;</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Image from path alias<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,11)),a("div",k,[s[31]||(s[31]=a("p",{class:"hint-container-title"},"Tips",-1)),a("p",null,[s[30]||(s[30]=n("Config reference: ")),t(e,{to:"/reference/plugin-api.html#alias"},{default:l(()=>s[29]||(s[29]=[n("alias")])),_:1})])])])}const h=i(d,[["render",g],["__file","assets.html.vue"]]),f=JSON.parse('{"path":"/guide/assets.html","title":"Assets","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Relative URLs","slug":"relative-urls","link":"#relative-urls","children":[]},{"level":2,"title":"Public Files","slug":"public-files","link":"#public-files","children":[{"level":3,"title":"Base Helper","slug":"base-helper","link":"#base-helper","children":[]}]},{"level":2,"title":"Packages and Path Aliases","slug":"packages-and-path-aliases","link":"#packages-and-path-aliases","children":[]}],"git":{"updatedTime":1739120872000,"contributors":[{"name":"Mai Thành Duy An","username":"Mai Thành Duy An","email":"tiachop0102@gmail.com","commits":1,"url":"https://github.com/Mai Thành Duy An"}]},"filePathRelative":"guide/assets.md","excerpt":"\\n<h2>Relative URLs</h2>\\n<p>You can reference any assets using relative URLs in your Markdown content:</p>\\n<div class=\\"language-markdown line-numbers-mode\\" data-highlighter=\\"prismjs\\" data-ext=\\"md\\" data-title=\\"md\\"><pre><code><span class=\\"line\\"><span class=\\"token url\\"><span class=\\"token operator\\">!</span>[<span class=\\"token content\\">An image</span>](<span class=\\"token url\\">./image.png</span>)</span></span>\\n<span class=\\"line\\"></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div>"}');export{h as comp,f as data};
